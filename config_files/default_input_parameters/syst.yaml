solver: 'mosek' #'cplex',mosek -- NOTE: solver must be cplex in inputData so that checks on problem solvability can be made in Learning -> Exploration -> optimisation
pu: 0 # have results in per unit
D: 1 # number of days
H: 24 # number of hours in a day

M: 1.e+6 # kWh; arbitrarily large number such that M >> battery capacity
co2tax: 70 # GBP/tCO2
labels_day: ['wd', 'we'] # week day, weekend
labels_day_trans: ['wd2wd', 'wd2we', 'we2wd', 'we2we'] # label for going from weekday to weekday, weekday to weekend, etc.
change_start: True # change start date for each exploration (within one month) so that grid costs change
J_per_kWh: 3.6e+6 # J/kWh = 3600 * 1000
break_down_rewards_entries: [
  'grid_energy_costs', 'battery_degradation_costs', 'distribution_network_export_costs',
  'import_export_costs', 'voltage_costs', 'hourly_line_losses',
  'cost_distribution_network_losses', 'costs_wholesale',
  'costs_upstream_losses', 'emissions', 'emissions_from_grid',
  'emissions_from_loss', 'total_costs',
  'indiv_grid_energy_costs', 'indiv_battery_degradation_costs','indiv_grid_battery_costs',
  'mean_voltage_deviation', 'mean_voltage_violation', 'max_voltage_deviation', 'n_voltage_violation_bus',
  'n_voltage_violation_hour'
]
share_centroid: 1 # what share of profiles to include in each cluster ordered from closest to furthest from centroid of each cluster
f0: {'gen': 8.012, 'loads': 9.459, 'car': 8.893} # demand / generation factor initialisation for RL data generation https://www.ukpower.co.uk/home_energy/average-household-gas-and-electricity-usage / https://www.choice.com.au/home-improvement/energy-saving/solar/articles/how-much-solar-do-i-need / https://www.statista.com/statistics/513456/annual-mileage-of-motorists-in-the-united-kingdom-uk/

# demand / generation factor initialisation for RL data generation
# https://www.ukpower.co.uk/home_energy/average-household-gas-and-electricity-usage
# https://www.choice.com.au/home-improvement/energy-saving/solar/articles/how-much-solar-do-i-need
# https://www.statista.com/statistics/513456/annual-mileage-of-motorists-in-the-united-kingdom-uk/
#    prm["syst"]["f0"] = {"loads": 9, "gen": 8, "car": 8}


clus0: {'loads' : 0, 'car' : 0} # demand / generation cluster initialisation for RL data generation
n_loads_clus: 4
seed: 0
behaviour_types: ['loads', 'car']
data_types: ['loads', 'car', 'gen']
year: 2021
year_test: 2021
month0: 1
month_end: 2
f_std_share: 1
clust_dist_share: 1
weekday_types: ['wd', 'we']  # week day types - wd: weekday day and we: weekend day
test_on_run: False
n_homes: 5 # number of buses considered
n_homesP: 0 # additional number of passive buses
n_homes_test: ~  # number of homes which use the policies that have been learned by the n_homes when testing
force_optimisation: False # force optimisation to be run even if it is not necessary (for timing purposes)
tol_constraints: 5.e-3
error_with_opt_to_rl_discharge: False  # there was an error in the way the optimisation was translated to RL discharge action values before; False = no problem
dem_intervals: [[0, 7], [7, 11], [11, 14], [14, 17], [17, 21], [21, 24]]  # relevant intervals for demand profile clustering
n_items: 50  # number of profiles generated by the GAN profile generator
n_items_gen: 25  # number of profiles generated by the GAN profile generator for PV profiles
clus_dist_share: 0.999  # share of variability between profiles included
gan_generation: True
indiv_step_vals_entries: [
    "state", "action", "diff_rewards", "next_state", "bool_flex"
]
